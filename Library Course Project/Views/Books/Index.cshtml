@model IEnumerable<Library_Course_Project.Models.Book>
@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
 @if (User.IsInRole("Admin"))
 {
<p>
    @Html.ActionLink("Create New", "Create")
</p>
 }
 @if (User.Identity.IsAuthenticated)
 {
    using (Html.BeginForm())
       {    
        <div class="col-md-12">
        <div class="col-md-2">
            Search By Tittle:
            @Html.TextBox("searchTitle", (string)ViewBag.TitleSearch, htmlAttributes: new { @class = "col-md-2 form-control" })
        </div>
        <div class="col-md-2">
            Search By Writer:
            @Html.TextBox("searchWriter", (string)ViewBag.WriterSearch, htmlAttributes: new { @class = "col-md-2 form-control" })
        </div>
        <div class="col-md-2">
            Search by Genre:
            @Html.DropDownList("searchGenreId", (IEnumerable<SelectListItem>)ViewBag.Genres, "---", htmlAttributes: new { @class = "col-md-2 form-control" })
        </div>
        <div class="col-md-2">
            <br />
            <button class="btn btn-primary"><i class="glyphicon glyphicon-search"></i>Search</button>
        </div>
        </div>
        <div class="col-md-2" style="height: 20px;"></div>
       }
 }

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Genre.GenreName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Writer.FirstName)
        </th>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParam, searchTitle = ViewBag.TitleSearch })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Genre.GenreName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Writer.FirstName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Title)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ReleaseDate)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Description)
    </td>
    @if (User.IsInRole("User") || User.IsInRole("Admin"))
    {
<td>
    @if (User.IsInRole("Admin")) { 

    @Html.ActionLink("Edit ", "Edit", new { id = item.BookId }) 
        
    @Html.ActionLink("Delete ", "Delete", new { id = item.BookId }) 
        

    }
    @Html.ActionLink("Details", "Details", new { id = item.BookId })
</td>
    }
</tr>
    }

</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, searchTitle = ViewBag.TitleSearch, sortOrder = ViewBag.SortOrder }))